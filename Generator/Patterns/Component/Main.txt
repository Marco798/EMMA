@page "/%%TABLE_NAME%%"

@using EMMA_BE.Generated
@using EMMA_FE.Components.Common.FieldType

@inject HttpClient Http
@rendermode InteractiveServer

@if (!showNew && !showEdit) {
	<div>
		<table>
			<tr>
				<th></th>
				@foreach (string field in %%TABLE_NAME%%_Table.GetFieldList()) {
					<th>@field</th>
				}
			</tr>
			@foreach (%%TABLE_NAME%%_Record record in _%%TABLE_NAME%%_Record_List) {
				<tr>
					<td><input type="button" value="E" @onclick="(x => { Edit(record);})" /></td>
%%INQUIRY_RECORD%%
				</tr>
			}
		</table>
		<input type="button" value="Insert" @onclick="New" />
	</div>
}

@if (showNew) {
	<div>
		<table>
%%INSERT_FIELD%%
		</table>
		<input type="button" value="Back" @onclick="BackFromNew" />
		<input type="button" value="Clean" @onclick="CleanNew" />
		<input type="button" value="Insert" @onclick="Insert" />
	</div>
}

@if (showEdit) {
	<div>
		<table>
%%UPDATE_FIELD%%
		</table>
		<input type="button" value="Back" @onclick="BackFromEdit" />
		<input type="button" value="Reset" @onclick="ResetUpdate" />
		<input type="button" value="Update" @onclick="Update" />
	</div>
}

@code {
	private List<%%TABLE_NAME%%_Record> _%%TABLE_NAME%%_Record_List = [];
	bool showEdit = false;
	bool showNew = false;

	private %%TABLE_NAME%%_BaseRecord? _%%TABLE_NAME%%_InsertRecord = null;

	private %%TABLE_NAME%%_IdRecord? _%%TABLE_NAME%%_UpdateRecord_Orig = null;
	private %%TABLE_NAME%%_IdRecord? _%%TABLE_NAME%%_UpdateRecord = null;

	protected override async Task OnInitializedAsync() {
		var response = await Http.GetAsync(@"https://localhost:7062/%%TABLE_NAME%%/SelectAll");
		if (response.IsSuccessStatusCode) {
			_%%TABLE_NAME%%_Record_List = await response.Content.ReadFromJsonAsync<List<%%TABLE_NAME%%_Record>>() ?? [];
		}
	}

	private void New() {
		showNew = true;
		_%%TABLE_NAME%%_InsertRecord = new();
	}

	private void BackFromNew() {
		showNew = false;
		_%%TABLE_NAME%%_InsertRecord = null;
	}

	private void CleanNew() {
		_%%TABLE_NAME%%_InsertRecord = new();
	}

	protected async void Insert() {
		var response = await Http.PostAsJsonAsync(@"https://localhost:7062/%%TABLE_NAME%%/Insert", _%%TABLE_NAME%%_InsertRecord);
		if (response.IsSuccessStatusCode) {
			showNew = false;
		}
	}

	private void Edit(%%TABLE_NAME%%_Record record) {
		showEdit = true;
		_%%TABLE_NAME%%_UpdateRecord_Orig = new(record);
		_%%TABLE_NAME%%_UpdateRecord = new(record);
	}

	private void BackFromEdit() {
		showEdit = false;
		_%%TABLE_NAME%%_UpdateRecord_Orig = null;
		_%%TABLE_NAME%%_UpdateRecord = null;
	}

	private void ResetUpdate() {
		_%%TABLE_NAME%%_UpdateRecord = _%%TABLE_NAME%%_UpdateRecord_Orig!.Clone();
	}

	protected async void Update() {
		var response = await Http.PostAsJsonAsync(@"https://localhost:7062/%%TABLE_NAME%%/UpdateByKey", _%%TABLE_NAME%%_UpdateRecord);
		if (response.IsSuccessStatusCode) {
			showEdit = false;
		}
	}

}