@page "/FLOW_INPUT_FILE"

@using EMMA_BE.Generated
@using EMMA_FE.Components.Common.FieldType

@inject HttpClient Http
@rendermode InteractiveServer

@if (!showNew && !showEdit) {
	<div>
		<table>
			<tr>
				<th></th>
				@foreach (string field in FLOW_INPUT_FILE_Table.GetFieldList()) {
					<th>@field</th>
				}
			</tr>
			@foreach (FLOW_INPUT_FILE_Record record in _FLOW_INPUT_FILE_Record_List) {
				<tr>
					<td><input type="button" value="E" @onclick="(x => { Edit(record);})" /></td>
					<td>@record.ID</td>
					<td>@record.NOME_FLUSSO</td>
					<td>@record.TIPO_FLUSSO</td>
					<td>@record.CONTENUTO</td>
					<td>@record.INS_DATE</td>
					<td>@record.INS_TIME</td>
					<td>@record.INS_INFO</td>
					<td>@record.UPD_DATE</td>
					<td>@record.UPD_TIME</td>
					<td>@record.UPD_INFO</td>
				</tr>
			}
		</table>
		<input type="button" value="Insert" @onclick="New" />
	</div>
}

@if (showNew) {
	<div>
		<table>
			<tr><TextBox Id="New_FLOW_INPUT_FILE" IsTable=true @bind-Value="@_FLOW_INPUT_FILE_InsertRecord!.NOME_FLUSSO" Description="NOME_FLUSSO" /></tr>
			<tr><TextBox Id="New_FLOW_INPUT_FILE" IsTable=true @bind-Value="@_FLOW_INPUT_FILE_InsertRecord!.TIPO_FLUSSO" Description="TIPO_FLUSSO" /></tr>
			<tr><td Id="New_FLOW_INPUT_FILE" style="border: none; text-align: right; display: block;">CONTENUTO</td></tr>
		</table>
		<input type="button" value="Back" @onclick="BackFromNew" />
		<input type="button" value="Clean" @onclick="CleanNew" />
		<input type="button" value="Insert" @onclick="Insert" />
	</div>
}

@if (showEdit) {
	<div>
		<table>
			<tr><TextBox Id="Edit_FLOW_INPUT_FILE" IsTable=true @bind-Value="@_FLOW_INPUT_FILE_EditRecord!.NOME_FLUSSO" Description="NOME_FLUSSO" /></tr>
			<tr><TextBox Id="Edit_FLOW_INPUT_FILE" IsTable=true @bind-Value="@_FLOW_INPUT_FILE_EditRecord!.TIPO_FLUSSO" Description="TIPO_FLUSSO" /></tr>
			<tr><td Id="Edit_FLOW_INPUT_FILE" style="border: none; text-align: right; display: block;">CONTENUTO</td></tr>
		</table>
		<input type="button" value="Back" @onclick="BackFromEdit" />
		<input type="button" value="Reset" @onclick="ResetUpdate" />
		<input type="button" value="Update" @onclick="Update" />
	</div>
}

@code {
	private List<FLOW_INPUT_FILE_Record> _FLOW_INPUT_FILE_Record_List = [];
	bool showEdit = false;
	bool showNew = false;

	private FLOW_INPUT_FILE_Record? _FLOW_INPUT_FILE_InsertRecord = null;

	private FLOW_INPUT_FILE_Record? _FLOW_INPUT_FILE_EditRecord_Orig = null;
	private FLOW_INPUT_FILE_Record? _FLOW_INPUT_FILE_EditRecord = null;

	protected override async Task OnInitializedAsync() {
		var response = await Http.GetAsync(@"https://localhost:7062/FLOW_INPUT_FILE/SelectAll");
		if (response.IsSuccessStatusCode) {
			_FLOW_INPUT_FILE_Record_List = await response.Content.ReadFromJsonAsync<List<FLOW_INPUT_FILE_Record>>() ?? [];
		}
	}

	private void New() {
		showNew = true;
		_FLOW_INPUT_FILE_InsertRecord = new();
	}

	private void BackFromNew() {
		showNew = false;
		_FLOW_INPUT_FILE_InsertRecord = null;
	}

	private void CleanNew() {
		_FLOW_INPUT_FILE_InsertRecord = new();
	}

	protected async void Insert() {
		var response = await Http.PostAsJsonAsync(@"https://localhost:7062/FLOW_INPUT_FILE/Insert", _FLOW_INPUT_FILE_InsertRecord);
		if (response.IsSuccessStatusCode) {
			showNew = false;
		}
	}

	private void Edit(FLOW_INPUT_FILE_Record record) {
		showEdit = true;
		_FLOW_INPUT_FILE_EditRecord_Orig = record.Clone();
		_FLOW_INPUT_FILE_EditRecord = record.Clone();
	}

	private void BackFromEdit() {
		showEdit = false;
		_FLOW_INPUT_FILE_EditRecord_Orig = null;
		_FLOW_INPUT_FILE_EditRecord = null;
	}

	private void ResetUpdate() {
		_FLOW_INPUT_FILE_EditRecord = _FLOW_INPUT_FILE_EditRecord_Orig!.Clone();
	}

	protected async void Update() {
		var response = await Http.PostAsJsonAsync(@"https://localhost:7062/FLOW_INPUT_FILE/UpdateByKey", _FLOW_INPUT_FILE_EditRecord);
		if (response.IsSuccessStatusCode) {
			showEdit = false;
		}
	}

}