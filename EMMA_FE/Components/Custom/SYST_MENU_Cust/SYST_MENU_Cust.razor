@page "/SYST_MENU_Cust"

@using EMMA_BE.Generated
@using EMMA_FE.Components.Common.EditableFields

@inject HttpClient Http
@rendermode InteractiveServer

<div>
    <table>
        <tr>
            <th colspan="3">ID</th>
            <th>Short description</th>
            <th>Name</th>
            <th>Index</th>
            <th>Description</th>
        </tr>
        @foreach (SYST_MENU_Record mainMenuVoice in _SYST_MENU_Record_List.Where(x => x.PARENT == 0).OrderBy(x => x.INDEX)) {
            <tr id="@mainMenuVoice.ID">
                <td style="border-right:none" @onclick="() => { MainVoice_OnClick(mainMenuVoice.NAME);}">@mainMenuVoice.ID.ToString().PadLeft(2, '0')</td>
                <td style="border: none"></td>
                <td style="border-left:none"></td>
                <td><EditableString Value="@mainMenuVoice.SHORT_DESCRIPTION" TableName="SYST_MENU" FieldName="@nameof(SYST_MENU_Record.SHORT_DESCRIPTION)" Id="mainMenuVoice.ID"/></td>
                <td><EditableString Value="@mainMenuVoice.NAME" TableName="SYST_MENU" FieldName="@nameof(SYST_MENU_Record.NAME)" Id="mainMenuVoice.ID" /></td>
                <td><EditableInt Value="@mainMenuVoice.INDEX!.Value" TableName="SYST_MENU" FieldName="@nameof(SYST_MENU_Record.INDEX)" Id="mainMenuVoice.ID" /></td>
                <td><EditableString Value="@mainMenuVoice.DESCRIPTION" TableName="SYST_MENU" FieldName="@nameof(SYST_MENU_Record.DESCRIPTION)" Id="mainMenuVoice.ID" /></td>
            </tr>
            @if (shownSections[mainMenuVoice.NAME]) {
                @foreach (SYST_MENU_Record menuVoice in _SYST_MENU_Record_List.Where(x => x.PARENT == mainMenuVoice.ID).OrderBy(x => x.INDEX)) {
                    <tr id="@menuVoice.ID">
                        <td style="border-right:none"></td>
                        <td style="border: none" @onclick="() => { MainVoice_OnClick(menuVoice.NAME);}">@menuVoice.ID.ToString().PadLeft(2, '0')</td>
                        <td style="border-left:none"></td>
                        <td>@menuVoice.SHORT_DESCRIPTION</td>
                        <td>@menuVoice.NAME</td>
                        <td>@menuVoice.INDEX?.ToString().PadLeft(2, '0')</td>
                        <td>@menuVoice.DESCRIPTION</td>
                    </tr>
                    @if (shownSections[menuVoice.NAME]) {
                        @foreach (SYST_MENU_Record subMenuVoice in _SYST_MENU_Record_List.Where(x => x.PARENT == menuVoice.ID).OrderBy(x => x.INDEX)) {
                            <tr id="@subMenuVoice.ID">
                                <td style="border-right:none"></td>
                                <td style="border: none"></td>
                                <td style="border-left:none">@subMenuVoice.ID.ToString().PadLeft(2, '0')</td>
                                <td>@subMenuVoice.SHORT_DESCRIPTION</td>
                                <td>@subMenuVoice.NAME</td>
                                <td>@subMenuVoice.INDEX?.ToString().PadLeft(2, '0')</td>
                                <td>@subMenuVoice.DESCRIPTION</td>
                            </tr>
                        }
                    }
                }
            }
        }
    </table>
</div>

@code {
    private List<SYST_MENU_Record> _SYST_MENU_Record_List = [];
    Dictionary<string, bool> shownSections = [];

    protected override async Task OnInitializedAsync() {
        var response = await Http.GetAsync(@"https://localhost:7062/SYST_MENU/SelectAll");
        if (response.IsSuccessStatusCode) {
            _SYST_MENU_Record_List = await response.Content.ReadFromJsonAsync<List<SYST_MENU_Record>>() ?? [];
            foreach (SYST_MENU_Record menuVoice in _SYST_MENU_Record_List) {
                shownSections.Add(menuVoice.NAME, false);
            }
        }
    }

    private void MainVoice_OnClick(string name) {
        shownSections[name] = !shownSections[name];
    }

    private void EditValue() {
        Console.WriteLine("test");
    }
}
